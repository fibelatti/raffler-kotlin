plugins {
    id("com.android.application")
    id("kotlin-android")
    id("kotlin-android-extensions")
    id("kotlin-kapt")
}

if (jacocoEnabled.toBoolean()) {
    println("Applying coverage-report.gradle")
    apply {
        from("coverage-report.gradle")
    }
}

android {
    compileSdkVersion(Versions.compileSdkVersion)

    defaultConfig {
        applicationId = AppInfo.applicationId
        versionCode = AppInfo.versionCode
        versionName = AppInfo.versionName
        minSdkVersion(Versions.minSdkVersion)
        targetSdkVersion(Versions.targetSdkVersion)

        resConfigs("en", "pt", "es")

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                    "room.schemaLocation":"$projectDir/schemas".toString(),
                    "room.incremental":"true"
                ]
            }
        }
    }

    signingConfigs {
        debug {
            storeFile file("../keystore/debug.keystore")
            keyAlias 'androiddebugkey'
            keyPassword 'android'
            storePassword 'android'
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            resValue "string", "app_name", AppInfo.appName + " Dev"

            testCoverageEnabled = jacocoEnabled.toBoolean()
            minifyEnabled false
        }
        release {
            resValue "string", "app_name", AppInfo.appName

            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
        }
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
        debug.java.srcDirs += 'src/debug/kotlin'

        String sharedTestDir = 'src/sharedTest/kotlin'
        String sharedTestResDir = 'src/sharedTest/resources'

        test {
            java.srcDir sharedTestDir
            java.srcDirs += sharedTestResDir
            java.srcDirs += 'src/test/kotlin'
        }

        androidTest {
            java.srcDir sharedTestDir
            java.srcDirs += sharedTestResDir
            java.srcDirs += 'src/androidTest/kotlin'
        }
    }

    compileOptions {
        sourceCompatibility(JavaVersion.VERSION_1_8)
        targetCompatibility(JavaVersion.VERSION_1_8)
    }

    testOptions {
        animationsDisabled true

        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true

            all {
                useJUnitPlatform()
            }
        }
    }
}

dependencies {
    implementation(Dependencies.coreLib)
    implementation(Dependencies.coreLibArch)

    // Kotlin
    implementation(Dependencies.kotlin)
    implementation(Dependencies.coroutinesCore)
    implementation(Dependencies.coroutinesAndroid)

    // Android
    implementation(Dependencies.appCompat)
    implementation(Dependencies.activity)
    implementation(Dependencies.fragments)
    implementation(Dependencies.materialDesign)
    implementation(Dependencies.constraintLayout)

    implementation(Dependencies.archComponents)
    kapt(Dependencies.archComponentsCompiler)

    implementation(Dependencies.room)
    kapt(Dependencies.roomCompiler)

    implementation(Dependencies.navigationFragment)
    implementation(Dependencies.navigationUi)

    // Misc
    implementation(Dependencies.dagger)
    kapt(Dependencies.daggerCompiler)

    implementation(Dependencies.gson)

    implementation(Dependencies.playCore)

    debugImplementation(Dependencies.leakCanary)

    // Test
    testRuntimeOnly(TestDependencies.junit5Engine)
    testRuntimeOnly(TestDependencies.junitVintage)

    testCompileOnly(TestDependencies.junit)

    testImplementation(TestDependencies.coreLibTest)
    testImplementation(TestDependencies.coreLibArchTest)

    testImplementation(TestDependencies.junit5)
    testImplementation(TestDependencies.junit5Params)
    testImplementation(TestDependencies.mockitoCore)
    testImplementation(TestDependencies.coroutinesTest)
    testImplementation(TestDependencies.archComponentsTest)

    androidTestImplementation(TestDependencies.coreLibTest)

    androidTestImplementation(Dependencies.supportAnnotations)
    androidTestImplementation(TestDependencies.archComponentsTest)
    androidTestImplementation(TestDependencies.roomTest)
    androidTestImplementation(TestDependencies.testRunner)
    androidTestImplementation(TestDependencies.kotlinTest)
}
